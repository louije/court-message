#!/usr/bin/env ruby

def setup
  if !docker?
    abort "This should be run within the Docker environment."
  end
  
  log "Installing gems"
  system! "bundle check || bundle install"
  
  log "Dropping and recreating dev db"
  system! "bin/rails db:reset || bin/rails db:migrate"
  
  log "Dropping and recreating test db"
  system!({ "RAILS_ENV" => "test"}, "bin/rails db:reset || bin/rails db:migrate")
  
  log
  log "All set up."
  log
  log "Run `bin/setup help` to see commonly-needed commands."
  log
end

def help
  log "Useful commands:"
  log
  log " bin/run"
  log "   # run app locally"
  log
  log " LOGRAGE_IN_DEVELOPMENT=true bin/run"
  log "   # run app locally using"
  log "   # production-like logging"
  log
  log " bin/ci"
  log "   # run all tests"
  log
  log " bin/test"
  log "   # run non-system tests"
  log
  log " bin/setup help"
  log "   # you are here"
end

### Helpers

# Log and error-check system calls
def system!(*args)
  log "Executing #{args}"
  if system(*args)
    log "#{args} succeeded"
  else
    log "#{args} failed"
    abort
  end
end

# Prepend source of the log message
def log(message = "")
  puts "[ bin/setup ] #{message}"
end

# Check if running within Docker
def docker?
  File.exist?("/.dockerenv")
end

### End of helpers

if ARGV[0] == "help"
  help
else
  setup
end